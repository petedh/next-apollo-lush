import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { gql } from "@apollo/client"
import client from "../apollo-client"

export default function Home({ products }) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className={styles.header}>
        <p>
          <b>Free UK delivery over £45</b> <a href="https://www.lush.com/uk/en/faq/delivery-information" target="_self" >Learn more</a>  |  <b>Pay in 3 with Klarna</b> <a href="https://www.lush.com/uk/en/a/klarna-frequently-asked-questions" target="_self" >Learn more</a>
        </p>
      </header>
      <main className={styles.main}>
      <div className={styles.gridContainer}>
          {products.map((product) => (
              <a key={product.node.id} href={`/product/${product.node.slug}`} className={styles.productTile}>
                  <Image src={product.node.thumbnail.url} title={product.node.seoTitle} alt={product.node.seoTitle} width={255} height={255} />
                  <h2 className={styles.productTitle}>{product.node.name}</h2>
              </a>
            ))}
        </div>   
      </main>


      <div className={styles.waveHolder}>
      <svg viewBox="0 0 500 150" preserveAspectRatio="none" className={styles.wave}>
        <path d="M0.00,92.27 C216.83,192.92 304.30,8.39 500.00,109.03 L500.00,0.00 L0.00,0.00 Z" ></path>
      </svg>
    </div>
      <footer className={styles.footer}>
        <p>Copyright © 1995–2021 Lush Retail Ltd.</p>
      </footer>
    </div>
  )
}

export async function getServerSideProps() {
  const { data } = await client.query({
    query: gql`
      query Products {
        products(channel: "uk", first: 12) {
          edges {
            cursor
            node {
              id
              name
              slug
              seoTitle
              thumbnail{url}
            }
          }
        }
      }
    `,
  });

  return {
    props: {
      products: data.products.edges,
    },
 };
}
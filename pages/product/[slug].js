import Head from 'next/head'
import Image from 'next/image'
import { gql } from "@apollo/client"
import client from "../../apollo-client"
import styles from '../../styles/Home.module.css'
import Pdp from '../../components/pdp'

const Product = ({product}) => {
    return (
        <div className={styles.container}>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
    
          <main className={styles.main}>
            <Pdp product={product} ></Pdp>
          </main>
    
          <footer className={styles.footer}>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              Powered by{' '}
              <span className={styles.logo}>
                <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
              </span>
            </a>
          </footer>
        </div>
    )
}

               
export default Product

export async function getServerSideProps(context) {
    debugger
    const slug  = context.params.slug
    const { data } = await client.query({
        query: gql`
        query Products {
            product(channel: "uk", slug: "${slug}" ) {
                id
                name
                slug
                seoTitle
                thumbnail {
                    url
                }
                description
                pricing {
                    priceRange {
                        start {
                            gross {
                                amount
                                currency
                            }
                        }
                        stop {
                            gross {
                                amount
                                currency
                            }
                        }
                    }
                }
            }
        }
        `,
    });
    
    return {
        props: {
            product: data.product,
        },
    };
}